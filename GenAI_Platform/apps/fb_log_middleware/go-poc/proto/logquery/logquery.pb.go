// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.6.1
// source: logquery/logquery.proto

package go_poc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkspaceDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace string `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Timespan  string `protobuf:"bytes,2,opt,name=timespan,proto3" json:"timespan,omitempty"`
	StartTime string `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Count     int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Offset    int64  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Ascending bool   `protobuf:"varint,6,opt,name=ascending,proto3" json:"ascending,omitempty"`
}

func (x *WorkspaceDashboardRequest) Reset() {
	*x = WorkspaceDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logquery_logquery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceDashboardRequest) ProtoMessage() {}

func (x *WorkspaceDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logquery_logquery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceDashboardRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceDashboardRequest) Descriptor() ([]byte, []int) {
	return file_logquery_logquery_proto_rawDescGZIP(), []int{0}
}

func (x *WorkspaceDashboardRequest) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *WorkspaceDashboardRequest) GetTimespan() string {
	if x != nil {
		return x.Timespan
	}
	return ""
}

func (x *WorkspaceDashboardRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *WorkspaceDashboardRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WorkspaceDashboardRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *WorkspaceDashboardRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

type AdminDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timespan  string `protobuf:"bytes,1,opt,name=timespan,proto3" json:"timespan,omitempty"`
	StartTime string `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Count     int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Offset    int64  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Ascending bool   `protobuf:"varint,5,opt,name=ascending,proto3" json:"ascending,omitempty"`
}

func (x *AdminDashboardRequest) Reset() {
	*x = AdminDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logquery_logquery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDashboardRequest) ProtoMessage() {}

func (x *AdminDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logquery_logquery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDashboardRequest.ProtoReflect.Descriptor instead.
func (*AdminDashboardRequest) Descriptor() ([]byte, []int) {
	return file_logquery_logquery_proto_rawDescGZIP(), []int{1}
}

func (x *AdminDashboardRequest) GetTimespan() string {
	if x != nil {
		return x.Timespan
	}
	return ""
}

func (x *AdminDashboardRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AdminDashboardRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AdminDashboardRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminDashboardRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

type AdminDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timespan  string `protobuf:"bytes,1,opt,name=timespan,proto3" json:"timespan,omitempty"`
	StartTime string `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Count     int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Offset    int64  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Ascending bool   `protobuf:"varint,5,opt,name=ascending,proto3" json:"ascending,omitempty"`
	Action    string `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
	Task      string `protobuf:"bytes,7,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *AdminDetailRequest) Reset() {
	*x = AdminDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logquery_logquery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDetailRequest) ProtoMessage() {}

func (x *AdminDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logquery_logquery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDetailRequest.ProtoReflect.Descriptor instead.
func (*AdminDetailRequest) Descriptor() ([]byte, []int) {
	return file_logquery_logquery_proto_rawDescGZIP(), []int{2}
}

func (x *AdminDetailRequest) GetTimespan() string {
	if x != nil {
		return x.Timespan
	}
	return ""
}

func (x *AdminDetailRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AdminDetailRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AdminDetailRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminDetailRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *AdminDetailRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AdminDetailRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

type TrainingFigureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingTool   string `protobuf:"bytes,1,opt,name=trainingTool,proto3" json:"trainingTool,omitempty"`
	TrainingItemId int64  `protobuf:"varint,2,opt,name=trainingItemId,proto3" json:"trainingItemId,omitempty"`
	Count          int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Offset         int64  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *TrainingFigureRequest) Reset() {
	*x = TrainingFigureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logquery_logquery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingFigureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingFigureRequest) ProtoMessage() {}

func (x *TrainingFigureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logquery_logquery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingFigureRequest.ProtoReflect.Descriptor instead.
func (*TrainingFigureRequest) Descriptor() ([]byte, []int) {
	return file_logquery_logquery_proto_rawDescGZIP(), []int{3}
}

func (x *TrainingFigureRequest) GetTrainingTool() string {
	if x != nil {
		return x.TrainingTool
	}
	return ""
}

func (x *TrainingFigureRequest) GetTrainingItemId() int64 {
	if x != nil {
		return x.TrainingItemId
	}
	return 0
}

func (x *TrainingFigureRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TrainingFigureRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type TrainingAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingTool   string `protobuf:"bytes,1,opt,name=trainingTool,proto3" json:"trainingTool,omitempty"`
	TrainingItemId int64  `protobuf:"varint,2,opt,name=trainingItemId,proto3" json:"trainingItemId,omitempty"`
	Count          int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Offset         int64  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *TrainingAllRequest) Reset() {
	*x = TrainingAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logquery_logquery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingAllRequest) ProtoMessage() {}

func (x *TrainingAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logquery_logquery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingAllRequest.ProtoReflect.Descriptor instead.
func (*TrainingAllRequest) Descriptor() ([]byte, []int) {
	return file_logquery_logquery_proto_rawDescGZIP(), []int{4}
}

func (x *TrainingAllRequest) GetTrainingTool() string {
	if x != nil {
		return x.TrainingTool
	}
	return ""
}

func (x *TrainingAllRequest) GetTrainingItemId() int64 {
	if x != nil {
		return x.TrainingItemId
	}
	return 0
}

func (x *TrainingAllRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TrainingAllRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DeploymentAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentWorkerId int64 `protobuf:"varint,1,opt,name=deploymentWorkerId,proto3" json:"deploymentWorkerId,omitempty"`
	Count              int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Offset             int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *DeploymentAllRequest) Reset() {
	*x = DeploymentAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logquery_logquery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentAllRequest) ProtoMessage() {}

func (x *DeploymentAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logquery_logquery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentAllRequest.ProtoReflect.Descriptor instead.
func (*DeploymentAllRequest) Descriptor() ([]byte, []int) {
	return file_logquery_logquery_proto_rawDescGZIP(), []int{5}
}

func (x *DeploymentAllRequest) GetDeploymentWorkerId() int64 {
	if x != nil {
		return x.DeploymentWorkerId
	}
	return 0
}

func (x *DeploymentAllRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DeploymentAllRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ImageAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageJobName string `protobuf:"bytes,1,opt,name=imageJobName,proto3" json:"imageJobName,omitempty"`
	Count        int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Offset       int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ImageAllRequest) Reset() {
	*x = ImageAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logquery_logquery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageAllRequest) ProtoMessage() {}

func (x *ImageAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logquery_logquery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageAllRequest.ProtoReflect.Descriptor instead.
func (*ImageAllRequest) Descriptor() ([]byte, []int) {
	return file_logquery_logquery_proto_rawDescGZIP(), []int{6}
}

func (x *ImageAllRequest) GetImageJobName() string {
	if x != nil {
		return x.ImageJobName
	}
	return ""
}

func (x *ImageAllRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ImageAllRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SummaryLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs         []*LogEntry `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	TotalCount   int64       `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	CurrentCount int32       `protobuf:"varint,3,opt,name=currentCount,proto3" json:"currentCount,omitempty"`
}

func (x *SummaryLogsResponse) Reset() {
	*x = SummaryLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logquery_logquery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryLogsResponse) ProtoMessage() {}

func (x *SummaryLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logquery_logquery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryLogsResponse.ProtoReflect.Descriptor instead.
func (*SummaryLogsResponse) Descriptor() ([]byte, []int) {
	return file_logquery_logquery_proto_rawDescGZIP(), []int{7}
}

func (x *SummaryLogsResponse) GetLogs() []*LogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *SummaryLogsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SummaryLogsResponse) GetCurrentCount() int32 {
	if x != nil {
		return x.CurrentCount
	}
	return 0
}

type LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logquery_logquery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_logquery_logquery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_logquery_logquery_proto_rawDescGZIP(), []int{8}
}

func (x *LogEntry) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

var File_logquery_logquery_proto protoreflect.FileDescriptor

var file_logquery_logquery_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x6c, 0x6f, 0x67, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6c, 0x6f, 0x67, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x19, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x22, 0xc6, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x91, 0x01, 0x0a,
	0x15, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x54, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x8e, 0x01, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x22, 0x74, 0x0a, 0x14, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x63, 0x0a, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x81, 0x01, 0x0a,
	0x13, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x7d, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c,
	0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32,
	0xea, 0x06, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4c,
	0x6f, 0x67, 0x73, 0x12, 0x23, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a,
	0x01, 0x2a, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x12, 0x79, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x7a, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1c, 0x2e, 0x6c, 0x6f, 0x67,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a,
	0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x79,
	0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x6f, 0x67,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x2f, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x70, 0x0a, 0x14, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x6c, 0x6c, 0x12, 0x76, 0x0a, 0x16, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c,
	0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x61, 0x6c, 0x6c, 0x12, 0x67, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x41, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6c, 0x6c, 0x42, 0x11, 0x5a, 0x0f,
	0x61, 0x63, 0x72, 0x79, 0x6c, 0x2e, 0x61, 0x69, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x6f, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logquery_logquery_proto_rawDescOnce sync.Once
	file_logquery_logquery_proto_rawDescData = file_logquery_logquery_proto_rawDesc
)

func file_logquery_logquery_proto_rawDescGZIP() []byte {
	file_logquery_logquery_proto_rawDescOnce.Do(func() {
		file_logquery_logquery_proto_rawDescData = protoimpl.X.CompressGZIP(file_logquery_logquery_proto_rawDescData)
	})
	return file_logquery_logquery_proto_rawDescData
}

var file_logquery_logquery_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_logquery_logquery_proto_goTypes = []any{
	(*WorkspaceDashboardRequest)(nil), // 0: logquery.WorkspaceDashboardRequest
	(*AdminDashboardRequest)(nil),     // 1: logquery.AdminDashboardRequest
	(*AdminDetailRequest)(nil),        // 2: logquery.AdminDetailRequest
	(*TrainingFigureRequest)(nil),     // 3: logquery.TrainingFigureRequest
	(*TrainingAllRequest)(nil),        // 4: logquery.TrainingAllRequest
	(*DeploymentAllRequest)(nil),      // 5: logquery.DeploymentAllRequest
	(*ImageAllRequest)(nil),           // 6: logquery.ImageAllRequest
	(*SummaryLogsResponse)(nil),       // 7: logquery.SummaryLogsResponse
	(*LogEntry)(nil),                  // 8: logquery.LogEntry
	nil,                               // 9: logquery.LogEntry.FieldsEntry
}
var file_logquery_logquery_proto_depIdxs = []int32{
	8, // 0: logquery.SummaryLogsResponse.logs:type_name -> logquery.LogEntry
	9, // 1: logquery.LogEntry.fields:type_name -> logquery.LogEntry.FieldsEntry
	0, // 2: logquery.LogQueryService.QueryWorkspaceDashboardLogs:input_type -> logquery.WorkspaceDashboardRequest
	1, // 3: logquery.LogQueryService.QueryAdminDashboardLogs:input_type -> logquery.AdminDashboardRequest
	2, // 4: logquery.LogQueryService.QueryAdminDetailLogs:input_type -> logquery.AdminDetailRequest
	3, // 5: logquery.LogQueryService.QueryTrainingFigureLogs:input_type -> logquery.TrainingFigureRequest
	4, // 6: logquery.LogQueryService.QueryTrainingAllLogs:input_type -> logquery.TrainingAllRequest
	5, // 7: logquery.LogQueryService.QueryDeploymentAllLogs:input_type -> logquery.DeploymentAllRequest
	6, // 8: logquery.LogQueryService.QueryImageAllLogs:input_type -> logquery.ImageAllRequest
	7, // 9: logquery.LogQueryService.QueryWorkspaceDashboardLogs:output_type -> logquery.SummaryLogsResponse
	7, // 10: logquery.LogQueryService.QueryAdminDashboardLogs:output_type -> logquery.SummaryLogsResponse
	7, // 11: logquery.LogQueryService.QueryAdminDetailLogs:output_type -> logquery.SummaryLogsResponse
	7, // 12: logquery.LogQueryService.QueryTrainingFigureLogs:output_type -> logquery.SummaryLogsResponse
	7, // 13: logquery.LogQueryService.QueryTrainingAllLogs:output_type -> logquery.SummaryLogsResponse
	7, // 14: logquery.LogQueryService.QueryDeploymentAllLogs:output_type -> logquery.SummaryLogsResponse
	7, // 15: logquery.LogQueryService.QueryImageAllLogs:output_type -> logquery.SummaryLogsResponse
	9, // [9:16] is the sub-list for method output_type
	2, // [2:9] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_logquery_logquery_proto_init() }
func file_logquery_logquery_proto_init() {
	if File_logquery_logquery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logquery_logquery_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*WorkspaceDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logquery_logquery_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AdminDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logquery_logquery_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AdminDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logquery_logquery_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TrainingFigureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logquery_logquery_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TrainingAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logquery_logquery_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeploymentAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logquery_logquery_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ImageAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logquery_logquery_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SummaryLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logquery_logquery_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*LogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logquery_logquery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logquery_logquery_proto_goTypes,
		DependencyIndexes: file_logquery_logquery_proto_depIdxs,
		MessageInfos:      file_logquery_logquery_proto_msgTypes,
	}.Build()
	File_logquery_logquery_proto = out.File
	file_logquery_logquery_proto_rawDesc = nil
	file_logquery_logquery_proto_goTypes = nil
	file_logquery_logquery_proto_depIdxs = nil
}
