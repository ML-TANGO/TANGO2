{{- range $index, $node := .Values.cluster }}
apiVersion: v1
kind: Pod
metadata:
  # annotations:
  labels:
    {{- range $key, $val := $.Values.labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end}}
    role: "jfb-user-function"
    index: "{{ $index }}"
    gpu_ids: {{ $node.gpu_ids | default "" | quote }}
    node_name: {{ $node.node_name | default "" | quote }}
  name: {{ $.Values.pod_name }}-{{ $index }}
  namespace: {{ $.Values.system.namespace }}-{{ $.Values.labels.workspace_id }}
spec:
  hostname: {{ $.Values.spec.hostname }}
  {{- if $node.node_name }}
  nodeName: {{ $node.node_name }}
  {{- end }}
  {{- if $.Values.spec.cpu_instance }}
  nodeSelector:
    jfb/cpu-instance.name: {{ $.Values.spec.cpu_instance }}
  {{- end }}
  containers:
  - command:
    - /bin/bash
    - -c
    - |
      {{- if $.Values.distributed_framework }}
      cd /distributed; ./init.sh && ./run.sh;
      cd $JF_HOME
      {{- end }}

      {{- if eq $index 0 }}
      (                                 
      {{ $.Values.spec.containers.command.hps_run_file }} {{ $.Values.spec.containers.command.search_option_command }} --command " {{ $.Values.spec.containers.command.run_command }} " {{ $.Values.spec.containers.command.log_command }}
      sleep 2
      )
      {{- else }}
      while true; do sleep 30; done;
      {{- end }}
    env:
    {{- range $key, $val := $.Values.spec.containers.env }}
    - name: {{ $key }}
      value: {{ $val | quote }}
    {{- end}}
    - name: JF_NUM_GPUS
      value: {{ $node.gpu_count | quote }}
    - name: JF_NUM_PODS
      value: {{ len $.Values.cluster | quote }}
    - name: JF_POD_INDEX
      value: {{ $index | quote }}
    - name: JF_DIST_HOSTFILE
      value: {{ $.Values.distributed_config_path }}
    {{- if $node.gpu_uuids }}
    - name: "NVIDIA_VISIBLE_DEVICES"
      value: {{ $node.gpu_uuids }}
    {{- end }}
    image: {{ $.Values.spec.containers.image }}
    imagePullPolicy: IfNotPresent
    lifecycle:
      postStart:
        exec:
          command:
          - /bin/sh
          - -c
          - echo START
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - echo END
    name: {{ $.Values.labels.work_func_type }}
    resources:
      limits:
        cpu : {{ $.Values.spec.containers.resource.limits.cpu }}
        memory : {{ $.Values.spec.containers.resource.limits.memory }}
        nvidia.com/gpu: {{ $node.gpu_count }}
      requests:
        cpu : 0
        memory : "1Gi"
        nvidia.com/gpu: {{ $node.gpu_count }}
    securityContext:
      capabilities:
        add:
        - IPC_LOCK
      privileged: false # TODO 기존과 같게 할건지 확인 필요
      runAsGroup: 0
      runAsUser: 0
    volumeMounts:
    - name: jf-data
      mountPath: {{ $.Values.spec.containers.env.JF_HOME}}/datasets_ro
      subPath: "0"
      readOnly: true
    - name: jf-data
      mountPath: {{ $.Values.spec.containers.env.JF_HOME}}/datasets_rw
      subPath: "1"
    - name: jf-main
      mountPath: {{ $.Values.spec.containers.env.JF_HOME}}
      subPath: projects/{{ $.Values.labels.project_name }}
    - name: jf-main
      mountPath: /training_logs
      subPath: projects/{{ $.Values.labels.project_name }}/training_logs
    - name: jf-bin
      mountPath: /examples
      subPath: sample/examples
      readOnly: true
      {{- if $.Values.distributed_framework }}
      # 분산학습 프레임워크 적용 
    - name: jf-bin
      mountPath: /distributed
      subPath: distributed
      readOnly: true
      {{- end }}
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostIPC: true
  restartPolicy: {{ $.Values.spec.restartPolicy }}
  terminationGracePeriodSeconds: 0
  volumes:
  - name: jf-main
    persistentVolumeClaim:
      claimName: {{ $.Values.system.namespace }}-{{ $.Values.labels.workspace_id }}-main-pvc
  - name: jf-data
    persistentVolumeClaim:
      claimName: {{ $.Values.system.namespace }}-{{ $.Values.labels.workspace_id }}-data-pvc
  - name: jf-bin
    persistentVolumeClaim:
      claimName: {{ $.Values.system.namespace }}-{{ $.Values.labels.workspace_id }}-bin-pvc
---
{{- end }}

